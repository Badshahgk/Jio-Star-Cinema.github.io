{"version":3,"sources":["components/Navbar.js","components/Sidebar.js","components/FilmList.js","components/FilmPage.js","components/SubmitAnalysis.js","components/Footer.js","components/DummyPage.js","App.js","index.js"],"names":["Navbar","dropdownOpen","setDropdownOpen","useState","React","createElement","className","href","onClick","toggleDropdown","Sidebar","_ref","onSelectGenre","FilmList","selectedGenre","movies","setMovies","useEffect","moviesData","groupedMovies","filter","movie","genre","reduce","acc","push","Object","keys","length","map","key","id","title","overview","release_date","vote_average","FilmPage","useParams","SubmitAnalysis","placeholder","rows","cols","type","Footer","DummyPage","App","setSelectedGenre","Router","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.947ee976.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-brand\">Jio Star Cinema</div>\r\n      <ul className=\"navbar-links\">\r\n        <li><a href=\"/\">Home</a></li>\r\n        <li onClick={toggleDropdown} className=\"dropdown\">\r\n          Services\r\n          {dropdownOpen && (\r\n            <ul className=\"dropdown-menu\">\r\n              <li><a href=\"/dummy\">Dummy Page</a></li>\r\n              <li><a href=\"/\">Another Service</a></li>\r\n            </ul>\r\n          )}\r\n        </li>\r\n        <li><a href=\"/submit\">Submit Analysis</a></li>\r\n        <li><button className=\"nav-button\">Login</button></li>\r\n        <li><button className=\"nav-button signup-button\">Sign Up</button></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","// src/components/Sidebar.js\r\nimport React from 'react';\r\nimport './Sidebar.css';\r\n\r\nfunction Sidebar({ onSelectGenre }) {\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <h3>Categories</h3>\r\n      <ul>\r\n        <li><a href=\"#\" onClick={() => onSelectGenre(\"Action\")}>Action</a></li>\r\n        <li><a href=\"#\" onClick={() => onSelectGenre(\"Drama\")}>Drama</a></li>\r\n        <li><a href=\"#\" onClick={() => onSelectGenre(\"Comedy\")}>Comedy</a></li>\r\n        <li><a href=\"#\" onClick={() => onSelectGenre(\"Sci-Fi\")}>Sci-Fi</a></li>\r\n        <li><a href=\"#\" onClick={() => onSelectGenre(\"\")}>All Movies</a></li> {/* Link to show all movies */}\r\n      </ul>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","// src/components/FilmList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport moviesData from '../movies.json'; // Import the JSON data\r\n\r\nfunction FilmList({ selectedGenre }) {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMovies(moviesData); // Set the movies data\r\n  }, []);\r\n\r\n  // Filter movies based on selected genre\r\n  const filteredMovies = selectedGenre\r\n    ? movies.filter(movie => movie.genre === selectedGenre)\r\n    : movies; // Show all movies if no genre is selected\r\n\r\n  // Group movies by genre\r\n  const groupedMovies = filteredMovies.reduce((acc, movie) => {\r\n    (acc[movie.genre] = acc[movie.genre] || []).push(movie);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <div className=\"film-list\">\r\n      <h2>Available Movies</h2>\r\n      {Object.keys(groupedMovies).length > 0 ? (\r\n        Object.keys(groupedMovies).map(genre => (\r\n          <div key={genre}>\r\n            <h3>{genre}</h3>\r\n            <ul>\r\n              {groupedMovies[genre].map(movie => (\r\n                <li key={movie.id}>\r\n                  <h4>{movie.title}</h4>\r\n                  <p>{movie.overview}</p>\r\n                  <p><strong>Release Date:</strong> {movie.release_date}</p>\r\n                  <p><strong>Rating:</strong> {movie.vote_average}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No movies found for this genre.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilmList;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction FilmPage() {\r\n  const { id } = useParams();\r\n  return (\r\n    <div className=\"film-page\">\r\n      <h2>Film Details for Film ID: {id}</h2>\r\n      <p>Here you can display the film's details based on the ID.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilmPage;\r\n","import React from 'react';\r\n\r\nfunction SubmitAnalysis() {\r\n  return (\r\n    <div className=\"submit-analysis\">\r\n      <h2>Submit Film Analysis</h2>\r\n      <form>\r\n        <textarea placeholder=\"Write your analysis here...\" rows=\"5\" cols=\"50\"></textarea>\r\n        <br />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubmitAnalysis;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p>&copy; 2024 Jio Star Cinema. All rights reserved.</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction DummyPage() {\r\n  return (\r\n    <div>\r\n      <h2>Dummy Page</h2>\r\n      <p>This is a dummy page for demonstration purposes.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DummyPage;\r\n","// src/App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Sidebar from './components/Sidebar';\nimport FilmList from './components/FilmList';\nimport FilmPage from './components/FilmPage';\nimport SubmitAnalysis from './components/SubmitAnalysis';\nimport Footer from './components/Footer';\nimport DummyPage from './components/DummyPage';\nimport './App.css';\n\nfunction App() {\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // Initialize with an empty string\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Navbar />\n        <div className=\"main-content\">\n          <Sidebar onSelectGenre={setSelectedGenre} />\n          <main>\n            <Routes>\n              <Route path=\"/\" element={<FilmList selectedGenre={selectedGenre} />} />\n              <Route path=\"/film/:id\" element={<FilmPage />} />\n              <Route path=\"/submit\" element={<SubmitAnalysis />} />\n              <Route path=\"/dummy\" element={<DummyPage />} />\n            </Routes>\n          </main>\n        </div>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css'; // Optional: Add global styles here if needed\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}